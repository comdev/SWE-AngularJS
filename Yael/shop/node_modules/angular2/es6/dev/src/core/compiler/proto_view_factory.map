{"version":3,"sources":["proto_view_factory.js"],"names":[],"mappings":"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","file":"angular2/src/core/compiler/proto_view_factory.es6","sourcesContent":["import {Injectable} from 'angular2/src/di/annotations_impl';\n\nimport {List, ListWrapper, MapWrapper} from 'angular2/src/facade/collection';\nimport {isPresent, isBlank} from 'angular2/src/facade/lang';\nimport {reflector} from 'angular2/src/reflection/reflection';\n\nimport {\n    ChangeDetection, DirectiveIndex, BindingRecord, DirectiveRecord,\n    ProtoChangeDetector, DEFAULT, ChangeDetectorDefinition\n} from 'angular2/change_detection';\n\nimport * as renderApi from 'angular2/src/render/api';\nimport {AppProtoView} from './view';\nimport {ProtoElementInjector, DirectiveBinding} from './element_injector';\n\nclass BindingRecordsCreator {\n  _directiveRecordsMap;\n  _textNodeIndex:number;\n\n  constructor() {\n    this._directiveRecordsMap = MapWrapper.create();\n    this._textNodeIndex = 0;\n  }\n\n  getBindingRecords(elementBinders:List<renderApi.ElementBinder>,\n      allDirectiveMetadatas:List<renderApi.DirectiveMetadata>\n      ):List<BindingRecord> {\n    var bindings = [];\n\n    for (var boundElementIndex = 0; boundElementIndex < elementBinders.length; boundElementIndex++) {\n      var renderElementBinder = elementBinders[boundElementIndex];\n      this._createTextNodeRecords(bindings, renderElementBinder);\n      this._createElementPropertyRecords(bindings, boundElementIndex, renderElementBinder);\n      this._createDirectiveRecords(bindings, boundElementIndex,\n          renderElementBinder.directives, allDirectiveMetadatas);\n    }\n\n    return bindings;\n  }\n\n  getDirectiveRecords(\n      elementBinders:List<renderApi.ElementBinder>,\n      allDirectiveMetadatas:List<renderApi.DirectiveMetadata>): List<DirectiveRecord> {\n    var directiveRecords = [];\n\n    for (var elementIndex = 0; elementIndex < elementBinders.length; ++elementIndex) {\n      var dirs = elementBinders[elementIndex].directives;\n      for (var dirIndex = 0; dirIndex < dirs.length; ++dirIndex) {\n        ListWrapper.push(directiveRecords,\n            this._getDirectiveRecord(\n                elementIndex, dirIndex, allDirectiveMetadatas[dirs[dirIndex].directiveIndex]));\n      }\n    }\n\n    return directiveRecords;\n  }\n\n  _createTextNodeRecords(bindings: List<BindingRecord>,\n      renderElementBinder: renderApi.ElementBinder) {\n    if (isBlank(renderElementBinder.textBindings)) return;\n\n    ListWrapper.forEach(renderElementBinder.textBindings, (b) => {\n      ListWrapper.push(bindings, BindingRecord.createForTextNode(b, this._textNodeIndex++));\n    });\n  }\n\n  _createElementPropertyRecords(bindings: List<BindingRecord>,\n      boundElementIndex:number, renderElementBinder:renderApi.ElementBinder) {\n    MapWrapper.forEach(renderElementBinder.propertyBindings, (astWithSource, propertyName) => {\n      ListWrapper.push(bindings,\n          BindingRecord.createForElement(astWithSource, boundElementIndex, propertyName));\n    });\n  }\n\n  _createDirectiveRecords(bindings: List<BindingRecord>,\n      boundElementIndex:number, directiveBinders:List<renderApi.DirectiveBinder>,\n      allDirectiveMetadatas:List<renderApi.DirectiveMetadata>) {\n    for (var i = 0; i < directiveBinders.length; i++) {\n      var directiveBinder = directiveBinders[i];\n      var directiveMetadata = allDirectiveMetadatas[directiveBinder.directiveIndex];\n\n      // directive properties\n      MapWrapper.forEach(directiveBinder.propertyBindings, (astWithSource, propertyName) => {\n        // TODO: these setters should eventually be created by change detection, to make\n        // it monomorphic!\n        var setter = reflector.setter(propertyName);\n        var directiveRecord = this._getDirectiveRecord(boundElementIndex, i, directiveMetadata);\n        ListWrapper.push(bindings,\n            BindingRecord.createForDirective(astWithSource, propertyName, setter, directiveRecord));\n      });\n\n      // host properties\n      MapWrapper.forEach(directiveBinder.hostPropertyBindings, (astWithSource, propertyName) => {\n        var dirIndex = new DirectiveIndex(boundElementIndex, i);\n        ListWrapper.push(bindings,\n            BindingRecord.createForHostProperty(dirIndex, astWithSource, propertyName));\n      });\n    }\n  }\n\n  _getDirectiveRecord(boundElementIndex:number, directiveIndex:number, directiveMetadata:renderApi.DirectiveMetadata): DirectiveRecord {\n    var id = boundElementIndex * 100 + directiveIndex;\n\n    if (!MapWrapper.contains(this._directiveRecordsMap, id)) {\n      var changeDetection = directiveMetadata.changeDetection;\n\n      MapWrapper.set(this._directiveRecordsMap, id,\n        new DirectiveRecord(new DirectiveIndex(boundElementIndex, directiveIndex),\n          directiveMetadata.callOnAllChangesDone, directiveMetadata.callOnChange, changeDetection));\n    }\n\n    return MapWrapper.get(this._directiveRecordsMap, id);\n  }\n}\n\n@Injectable()\nexport class ProtoViewFactory {\n  _changeDetection: ChangeDetection;\n\n  constructor(changeDetection: ChangeDetection) {\n    this._changeDetection = changeDetection;\n  }\n\n  createAppProtoViews(hostComponentBinding:DirectiveBinding,\n                  rootRenderProtoView: renderApi.ProtoViewDto, allDirectives:List<DirectiveBinding>):List<AppProtoView> {\n    var allRenderDirectiveMetadata = ListWrapper.map(allDirectives, directiveBinding => directiveBinding.metadata);\n    var nestedPvsWithIndex = _collectNestedProtoViews(rootRenderProtoView);\n    var nestedPvVariableBindings = _collectNestedProtoViewsVariableBindings(nestedPvsWithIndex);\n    var nestedPvVariableNames = _collectNestedProtoViewsVariableNames(nestedPvsWithIndex, nestedPvVariableBindings);\n    var changeDetectorDefs = _getChangeDetectorDefinitions(\n        hostComponentBinding.metadata, nestedPvsWithIndex, nestedPvVariableNames, allRenderDirectiveMetadata\n    );\n    var protoChangeDetectors = ListWrapper.map(\n        changeDetectorDefs, changeDetectorDef => this._changeDetection.createProtoChangeDetector(changeDetectorDef)\n    );\n    var appProtoViews = ListWrapper.createFixedSize(nestedPvsWithIndex.length);\n    ListWrapper.forEach(nestedPvsWithIndex, (pvWithIndex) => {\n      var appProtoView = _createAppProtoView(\n        pvWithIndex.renderProtoView,\n        protoChangeDetectors[pvWithIndex.index],\n        nestedPvVariableBindings[pvWithIndex.index],\n        allDirectives\n      );\n      if (isPresent(pvWithIndex.parentIndex)) {\n        var parentView = appProtoViews[pvWithIndex.parentIndex];\n        parentView.elementBinders[pvWithIndex.boundElementIndex].nestedProtoView = appProtoView;\n      }\n      appProtoViews[pvWithIndex.index] = appProtoView;\n    });\n    return appProtoViews;\n  }\n}\n\n/**\n * Returns the data needed to create ChangeDetectors\n * for the given ProtoView and all nested ProtoViews.\n */\nexport function getChangeDetectorDefinitions(\n    hostComponentMetadata:renderApi.DirectiveMetadata,\n    rootRenderProtoView: renderApi.ProtoViewDto,\n    allRenderDirectiveMetadata:List<renderApi.DirectiveMetadata>): List<ChangeDetectorDefinition> {\n  var nestedPvsWithIndex = _collectNestedProtoViews(rootRenderProtoView);\n  var nestedPvVariableBindings = _collectNestedProtoViewsVariableBindings(nestedPvsWithIndex);\n  var nestedPvVariableNames = _collectNestedProtoViewsVariableNames(nestedPvsWithIndex, nestedPvVariableBindings);\n\n  return _getChangeDetectorDefinitions(\n    hostComponentMetadata,\n    nestedPvsWithIndex,\n    nestedPvVariableNames,\n    allRenderDirectiveMetadata\n  );\n}\n\nfunction _collectNestedProtoViews(renderProtoView:renderApi.ProtoViewDto,\n    parentIndex:number = null,\n    boundElementIndex = null,\n    result:List<RenderProtoViewWithIndex> = null): List<RenderProtoViewWithIndex> {\n  if (isBlank(result)) {\n    result = [];\n  }\n  ListWrapper.push(result, new RenderProtoViewWithIndex(renderProtoView, result.length, parentIndex, boundElementIndex));\n  var currentIndex = result.length - 1;\n  var childBoundElementIndex = 0;\n  ListWrapper.forEach(renderProtoView.elementBinders, (elementBinder) => {\n    if (isPresent(elementBinder.nestedProtoView)) {\n      _collectNestedProtoViews(elementBinder.nestedProtoView, currentIndex, childBoundElementIndex, result);\n    }\n    childBoundElementIndex++;\n  });\n  return result;\n}\n\nfunction _getChangeDetectorDefinitions(\n    hostComponentMetadata:renderApi.DirectiveMetadata,\n    nestedPvsWithIndex: List<RenderProtoViewWithIndex>,\n    nestedPvVariableNames: List<List<string>>,\n    allRenderDirectiveMetadata:List<renderApi.DirectiveMetadata>):List<ChangeDetectorDefinition> {\n  return ListWrapper.map(nestedPvsWithIndex, (pvWithIndex) => {\n    var elementBinders = pvWithIndex.renderProtoView.elementBinders;\n    var bindingRecordsCreator = new BindingRecordsCreator();\n    var bindingRecords = bindingRecordsCreator.getBindingRecords(elementBinders, allRenderDirectiveMetadata);\n    var directiveRecords = bindingRecordsCreator.getDirectiveRecords(elementBinders, allRenderDirectiveMetadata);\n    var strategyName = DEFAULT;\n    var typeString;\n    if (pvWithIndex.renderProtoView.type === renderApi.ProtoViewDto.COMPONENT_VIEW_TYPE) {\n      strategyName = hostComponentMetadata.changeDetection;\n      typeString = 'comp';\n    } else if (pvWithIndex.renderProtoView.type === renderApi.ProtoViewDto.HOST_VIEW_TYPE) {\n      typeString = 'host';\n    } else {\n      typeString = 'embedded';\n    }\n    var id = `${hostComponentMetadata.id}_${typeString}_${pvWithIndex.index}`;\n    var variableNames = nestedPvVariableNames[pvWithIndex.index];\n    return new ChangeDetectorDefinition(id, strategyName, variableNames, bindingRecords, directiveRecords);\n  });\n}\n\nfunction _createAppProtoView(\n    renderProtoView: renderApi.ProtoViewDto,\n    protoChangeDetector: ProtoChangeDetector,\n    variableBindings: Map<string, string>,\n    allDirectives:List<DirectiveBinding>\n    ):AppProtoView {\n  var elementBinders = renderProtoView.elementBinders;\n  var protoView = new AppProtoView(renderProtoView.render, protoChangeDetector, variableBindings);\n\n  // TODO: vsavkin refactor to pass element binders into proto view\n  _createElementBinders(protoView, elementBinders, allDirectives);\n  _bindDirectiveEvents(protoView, elementBinders);\n\n  return protoView;\n}\n\nfunction _collectNestedProtoViewsVariableBindings(\n    nestedPvsWithIndex: List<RenderProtoViewWithIndex>\n  ):List<Map<string, string>> {\n  return ListWrapper.map(nestedPvsWithIndex, (pvWithIndex) => {\n    return _createVariableBindings(pvWithIndex.renderProtoView);\n  });\n}\n\nfunction _createVariableBindings(renderProtoView):Map {\n  var variableBindings = MapWrapper.create();\n  MapWrapper.forEach(renderProtoView.variableBindings, (mappedName, varName) => {\n    MapWrapper.set(variableBindings, varName, mappedName);\n  });\n  ListWrapper.forEach(renderProtoView.elementBinders, binder => {\n    MapWrapper.forEach(binder.variableBindings, (mappedName, varName) => {\n      MapWrapper.set(variableBindings, varName, mappedName);\n    });\n  });\n  return variableBindings;\n}\n\nfunction _collectNestedProtoViewsVariableNames(\n    nestedPvsWithIndex: List<RenderProtoViewWithIndex>,\n    nestedPvVariableBindings:List<Map<string, string>>\n  ):List<List<string>> {\n  var nestedPvVariableNames = ListWrapper.createFixedSize(nestedPvsWithIndex.length);\n  ListWrapper.forEach(nestedPvsWithIndex, (pvWithIndex) => {\n    var parentVariableNames = isPresent(pvWithIndex.parentIndex) ? nestedPvVariableNames[pvWithIndex.parentIndex] : null;\n    nestedPvVariableNames[pvWithIndex.index] = _createVariableNames(\n      parentVariableNames, nestedPvVariableBindings[pvWithIndex.index]\n    );\n  });\n  return nestedPvVariableNames;\n}\n\nfunction _createVariableNames(parentVariableNames, variableBindings):List {\n  var variableNames = isPresent(parentVariableNames) ? ListWrapper.clone(parentVariableNames) : [];\n  MapWrapper.forEach(variableBindings, (local, v) => {\n    ListWrapper.push(variableNames, local);\n  });\n  return variableNames;\n}\n\nfunction _createElementBinders(protoView, elementBinders, allDirectiveBindings) {\n  for (var i=0; i<elementBinders.length; i++) {\n    var renderElementBinder = elementBinders[i];\n    var dirs = elementBinders[i].directives;\n\n    var parentPeiWithDistance = _findParentProtoElementInjectorWithDistance(\n        i, protoView.elementBinders, elementBinders);\n    var directiveBindings = ListWrapper.map(dirs, (dir) => allDirectiveBindings[dir.directiveIndex] );\n    var componentDirectiveBinding = null;\n    if (directiveBindings.length > 0) {\n      if (directiveBindings[0].metadata.type === renderApi.DirectiveMetadata.COMPONENT_TYPE) {\n        componentDirectiveBinding = directiveBindings[0];\n      }\n    }\n    var protoElementInjector = _createProtoElementInjector(\n        i, parentPeiWithDistance, renderElementBinder, componentDirectiveBinding, directiveBindings);\n\n    _createElementBinder(protoView, i, renderElementBinder, protoElementInjector, componentDirectiveBinding);\n  }\n}\n\nfunction _findParentProtoElementInjectorWithDistance(binderIndex, elementBinders, renderElementBinders) {\n  var distance = 0;\n  do {\n    var renderElementBinder = renderElementBinders[binderIndex];\n    binderIndex = renderElementBinder.parentIndex;\n    if (binderIndex !== -1) {\n      distance += renderElementBinder.distanceToParent;\n      var elementBinder = elementBinders[binderIndex];\n      if (isPresent(elementBinder.protoElementInjector)) {\n        return new ParentProtoElementInjectorWithDistance(elementBinder.protoElementInjector, distance);\n      }\n    }\n  } while (binderIndex !== -1);\n  return new ParentProtoElementInjectorWithDistance(null, -1);\n}\n\nfunction _createProtoElementInjector(binderIndex, parentPeiWithDistance, renderElementBinder, componentDirectiveBinding, directiveBindings) {\n  var protoElementInjector = null;\n  // Create a protoElementInjector for any element that either has bindings *or* has one\n  // or more var- defined. Elements with a var- defined need a their own element injector\n  // so that, when hydrating, $implicit can be set to the element.\n  var hasVariables = MapWrapper.size(renderElementBinder.variableBindings) > 0;\n  if (directiveBindings.length > 0 || hasVariables) {\n    protoElementInjector = ProtoElementInjector.create(\n        parentPeiWithDistance.protoElementInjector, binderIndex,\n        directiveBindings,\n        isPresent(componentDirectiveBinding), parentPeiWithDistance.distance\n    );\n    protoElementInjector.attributes = renderElementBinder.readAttributes;\n    if (hasVariables) {\n      protoElementInjector.exportComponent = isPresent(componentDirectiveBinding);\n      protoElementInjector.exportElement = isBlank(componentDirectiveBinding);\n\n      // experiment\n      var exportImplicitName = MapWrapper.get(renderElementBinder.variableBindings, '\\$implicit');\n      if (isPresent(exportImplicitName)) {\n        protoElementInjector.exportImplicitName = exportImplicitName;\n      }\n    }\n  }\n  return protoElementInjector;\n}\n\nfunction _createElementBinder(protoView, boundElementIndex, renderElementBinder, protoElementInjector, componentDirectiveBinding) {\n  var parent = null;\n  if (renderElementBinder.parentIndex !== -1) {\n    parent = protoView.elementBinders[renderElementBinder.parentIndex];\n  }\n  var elBinder = protoView.bindElement(\n    parent,\n    renderElementBinder.distanceToParent,\n    protoElementInjector,\n    componentDirectiveBinding\n  );\n  protoView.bindEvent(renderElementBinder.eventBindings, boundElementIndex, -1);\n  // variables\n  // The view's locals needs to have a full set of variable names at construction time\n  // in order to prevent new variables from being set later in the lifecycle. Since we don't want\n  // to actually create variable bindings for the $implicit bindings, add to the\n  // protoLocals manually.\n  MapWrapper.forEach(renderElementBinder.variableBindings, (mappedName, varName) => {\n    MapWrapper.set(protoView.protoLocals, mappedName, null);\n  });\n  return elBinder;\n}\n\nfunction _bindDirectiveEvents(protoView, elementBinders:List<renderApi.ElementBinder>) {\n  for (var boundElementIndex = 0; boundElementIndex < elementBinders.length; ++boundElementIndex) {\n    var dirs = elementBinders[boundElementIndex].directives;\n    for (var i = 0; i < dirs.length; i++) {\n      var directiveBinder = dirs[i];\n\n      // directive events\n      protoView.bindEvent(directiveBinder.eventBindings, boundElementIndex, i);\n    }\n  }\n}\n\n\nclass RenderProtoViewWithIndex {\n  renderProtoView:renderApi.ProtoViewDto;\n  index:number;\n  parentIndex:number;\n  boundElementIndex:number;\n  constructor(renderProtoView:renderApi.ProtoViewDto, index:number, parentIndex:number, boundElementIndex:number) {\n    this.renderProtoView = renderProtoView;\n    this.index = index;\n    this.parentIndex = parentIndex;\n    this.boundElementIndex = boundElementIndex;\n  }\n}\n\nclass ParentProtoElementInjectorWithDistance {\n  protoElementInjector:ProtoElementInjector;\n  distance:number;\n  constructor(protoElementInjector:ProtoElementInjector, distance:number) {\n    this.protoElementInjector = protoElementInjector;\n    this.distance = distance;\n  }\n}\n"]}