{"version":3,"sources":["ng_non_bindable.js"],"names":[],"mappings":"AAAA,KAAO,EAAC,SAAQ,CAAC,KAAO,iDAA+C,CAAC;AAqBxE,KAAO,MAAM,cAAY,GACzB;AAAA,AAtBA,KAAK,eAAe,AAAC,8BACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,cAgBzB,UAAQ,AAAC,CAAC;AACT,aAAO,CAAG,oBAAkB;AAC5B,oBAAc,CAAG,MAAI;AAAA,IACvB,CAAC,EAnBgD;EAAC,CAAC,CAAC,CAAC;AAsBrD","file":"angular2/src/directives/ng_non_bindable.es6","sourcesContent":["import {Directive} from 'angular2/src/core/annotations_impl/annotations';\n\n/**\n * The `NgNonBindable` directive tells Angular not to compile or bind the contents of the current\n * DOM element. This is useful if the element contains what appears to be Angular directives and\n * bindings but which should be ignored by Angular. This could be the case if you have a site that\n * displays snippets of code, for instance.\n *\n * Example:\n *\n * ```\n * <div>Normal: {{1 + 2}}</div> // output \"Normal: 3\"\n * <div non-bindable>Ignored: {{1 + 2}}</div> // output \"Ignored: {{1 + 2}}\"\n * ```\n *\n * @exportedAs angular2/directives\n */\n@Directive({\n  selector: '[ng-non-bindable]',\n  compileChildren: false\n})\nexport class NgNonBindable {\n}\n"]}