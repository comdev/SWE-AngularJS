{"version":3,"sources":["fake_async.es6"],"names":[],"mappings":"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","file":"angular2/src/test_lib/fake_async.es6","sourcesContent":["import {BaseException, global} from 'angular2/src/facade/lang';\nimport {ListWrapper} from 'angular2/src/facade/collection';\n\nvar _scheduler;\nvar _microtasks:List<Function> = [];\nvar _pendingPeriodicTimers: List<number> = [];\nvar _pendingTimers: List<number> = [];\nvar _error = null;\n\n/**\n * Wraps a function to be executed in the fakeAsync zone:\n * - microtasks are manually executed by calling `flushMicrotasks()`,\n * - timers are synchronous, `tick()` simulates the asynchronous passage of time.\n *\n * If there are any pending timers at the end of the function, an exception will be thrown.\n *\n * @param fn\n * @returns {Function} The function wrapped to be executed in the fakeAsync zone\n */\nexport function fakeAsync(fn: Function): Function {\n  // TODO(vicb) re-enable once the jasmine patch from zone.js is applied\n  //if (global.zone._inFakeAsyncZone) {\n  //  throw new Error('fakeAsync() calls can not be nested');\n  //}\n\n  var fakeAsyncZone = global.zone.fork({\n    setTimeout: _setTimeout,\n    clearTimeout: _clearTimeout,\n    setInterval: _setInterval,\n    clearInterval: _clearInterval,\n    scheduleMicrotask: _scheduleMicrotask,\n    _inFakeAsyncZone: true\n  });\n\n  return function(...args) {\n    _scheduler = global.jasmine.DelayedFunctionScheduler();\n    ListWrapper.clear(_microtasks);\n    ListWrapper.clear(_pendingPeriodicTimers);\n    ListWrapper.clear(_pendingTimers);\n\n    var res = fakeAsyncZone.run(() => {\n      var res = fn(...args);\n    });\n\n    if (_pendingPeriodicTimers.length > 0) {\n      throw new BaseException(`${_pendingPeriodicTimers.length} periodic timer(s) still in the queue.`);\n    }\n\n    if (_pendingTimers.length > 0) {\n      throw new BaseException(`${_pendingTimers.length} timer(s) still in the queue.`);\n    }\n\n    _scheduler = null;\n    ListWrapper.clear(_microtasks);\n\n    return res;\n  }\n}\n\n/**\n * Simulates the asynchronous passage of time for the timers in the fakeAsync zone.\n *\n * The microtasks queue is drained at the very start of this function and after any timer callback has been executed.\n *\n * @param {number} millis Number of millisecond, defaults to 0\n */\nexport function tick(millis: number = 0): void {\n  _assertInFakeAsyncZone();\n  flushMicrotasks();\n  _scheduler.tick(millis);\n}\n\n/**\n * Flush any pending microtasks.\n */\nexport function flushMicrotasks(): void {\n  _assertInFakeAsyncZone();\n  while (_microtasks.length > 0) {\n    var microtask = ListWrapper.removeAt(_microtasks, 0);\n    microtask();\n  }\n}\n\nfunction _setTimeout(fn: Function, delay: number, ...args): number {\n  var cb = _fnAndFlush(fn);\n  var id = _scheduler.scheduleFunction(cb, delay, args);\n  ListWrapper.push(_pendingTimers, id);\n  _scheduler.scheduleFunction(_dequeueTimer(id), delay);\n  return id;\n}\n\nfunction _clearTimeout(id: number) {\n  _dequeueTimer(id);\n  return _scheduler.removeFunctionWithId(id);\n}\n\nfunction _setInterval(fn: Function, interval: number, ...args) {\n  var cb = _fnAndFlush(fn);\n  var id = _scheduler.scheduleFunction(cb, interval, args, true);\n  _pendingPeriodicTimers.push(id);\n  return id;\n}\n\nfunction _clearInterval(id: number) {\n  ListWrapper.remove(_pendingPeriodicTimers, id);\n  return _scheduler.removeFunctionWithId(id);\n}\n\nfunction _fnAndFlush(fn: Function): void {\n  return () => {\n    fn.apply(global, arguments);\n    flushMicrotasks();\n  }\n}\n\nfunction _scheduleMicrotask(microtask: Function): void {\n  ListWrapper.push(_microtasks, microtask);\n}\n\nfunction _dequeueTimer(id: number): Function {\n  return function() {\n    ListWrapper.remove(_pendingTimers, id);\n  }\n}\n\nfunction _assertInFakeAsyncZone(): void {\n  if (!global.zone._inFakeAsyncZone) {\n    throw new Error('The code should be running in the fakeAsync zone to call this function');\n  }\n}\n\n"]}