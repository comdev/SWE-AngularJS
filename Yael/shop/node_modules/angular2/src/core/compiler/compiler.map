{"version":3,"sources":["compiler.js"],"names":[],"mappings":"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","file":"angular2/src/core/compiler/compiler.js","sourcesContent":["import {Binding, resolveForwardRef} from 'angular2/di';\nimport {Injectable} from 'angular2/src/di/annotations_impl';\nimport {Type, isBlank, isPresent, BaseException, normalizeBlank, stringify} from 'angular2/src/facade/lang';\nimport {Promise, PromiseWrapper} from 'angular2/src/facade/async';\nimport {List, ListWrapper, Map, MapWrapper} from 'angular2/src/facade/collection';\n\nimport {DirectiveResolver} from './directive_resolver';\n\nimport {AppProtoView} from './view';\nimport {ElementBinder} from './element_binder';\nimport {ProtoViewRef} from './view_ref';\nimport {DirectiveBinding} from './element_injector';\nimport {TemplateResolver} from './template_resolver';\nimport {View} from '../annotations_impl/view';\nimport {ComponentUrlMapper} from './component_url_mapper';\nimport {ProtoViewFactory} from './proto_view_factory';\nimport {UrlResolver} from 'angular2/src/services/url_resolver';\n\nimport * as renderApi from 'angular2/src/render/api';\n\n/**\n * Cache that stores the AppProtoView of the template of a component.\n * Used to prevent duplicate work and resolve cyclic dependencies.\n */\n@Injectable()\nexport class CompilerCache {\n  _cache:Map;\n  constructor() {\n    this._cache = MapWrapper.create();\n  }\n\n  set(component:Type, protoView:AppProtoView):void {\n    MapWrapper.set(this._cache, component, protoView);\n  }\n\n  get(component:Type):AppProtoView {\n    var result = MapWrapper.get(this._cache, component);\n    return normalizeBlank(result);\n  }\n\n  clear():void {\n    MapWrapper.clear(this._cache);\n  }\n}\n\n/**\n * @exportedAs angular2/view\n */\n@Injectable()\nexport class Compiler {\n  _reader: DirectiveResolver;\n  _compilerCache:CompilerCache;\n  _compiling:Map<Type, Promise>;\n  _templateResolver: TemplateResolver;\n  _componentUrlMapper: ComponentUrlMapper;\n  _urlResolver: UrlResolver;\n  _appUrl: string;\n  _render: renderApi.RenderCompiler;\n  _protoViewFactory:ProtoViewFactory;\n\n  constructor(reader: DirectiveResolver,\n              cache:CompilerCache,\n              templateResolver: TemplateResolver,\n              componentUrlMapper: ComponentUrlMapper,\n              urlResolver: UrlResolver,\n              render: renderApi.RenderCompiler,\n              protoViewFactory: ProtoViewFactory) {\n    this._reader = reader;\n    this._compilerCache = cache;\n    this._compiling = MapWrapper.create();\n    this._templateResolver = templateResolver;\n    this._componentUrlMapper = componentUrlMapper;\n    this._urlResolver = urlResolver;\n    this._appUrl = urlResolver.resolve(null, './');\n    this._render = render;\n    this._protoViewFactory = protoViewFactory;\n  }\n\n  _bindDirective(directiveTypeOrBinding):DirectiveBinding {\n    if (directiveTypeOrBinding instanceof DirectiveBinding) {\n      return directiveTypeOrBinding;\n    } else if (directiveTypeOrBinding instanceof Binding) {\n      let annotation = this._reader.resolve(directiveTypeOrBinding.token);\n      return DirectiveBinding.createFromBinding(directiveTypeOrBinding, annotation);\n    } else {\n      let annotation = this._reader.resolve(directiveTypeOrBinding);\n      return DirectiveBinding.createFromType(directiveTypeOrBinding, annotation);\n    }\n  }\n\n  // Create a hostView as if the compiler encountered <hostcmp></hostcmp>.\n  // Used for bootstrapping.\n  compileInHost(componentTypeOrBinding:any):Promise<ProtoViewRef> {\n    var componentBinding = this._bindDirective(componentTypeOrBinding);\n    Compiler._assertTypeIsComponent(componentBinding);\n\n    var directiveMetadata = componentBinding.metadata;\n    return this._render.compileHost(directiveMetadata).then( (hostRenderPv) => {\n      return this._compileNestedProtoViews(componentBinding, hostRenderPv, [componentBinding]);\n    }).then( (appProtoView) => {\n      return new ProtoViewRef(appProtoView);\n    });\n  }\n\n  compile(component: Type):Promise<ProtoViewRef> {\n    var componentBinding = this._bindDirective(component);\n    Compiler._assertTypeIsComponent(componentBinding);\n    var protoView = this._compile(componentBinding);\n    var pvPromise = PromiseWrapper.isPromise(protoView) ? protoView : PromiseWrapper.resolve(protoView);\n    return pvPromise.then( (appProtoView) => {\n      return new ProtoViewRef(appProtoView);\n    });\n  }\n\n  // TODO(vicb): union type return AppProtoView or Promise<AppProtoView>\n  _compile(componentBinding: DirectiveBinding) {\n    var component = componentBinding.key.token;\n    var protoView = this._compilerCache.get(component);\n    if (isPresent(protoView)) {\n      // The component has already been compiled into an AppProtoView,\n      // returns a plain AppProtoView, not wrapped inside of a Promise.\n      // Needed for recursive components.\n      return protoView;\n    }\n\n    var pvPromise = MapWrapper.get(this._compiling, component);\n    if (isPresent(pvPromise)) {\n      // The component is already being compiled, attach to the existing Promise\n      // instead of re-compiling the component.\n      // It happens when a template references a component multiple times.\n      return pvPromise;\n    }\n    var template = this._templateResolver.resolve(component);\n    if (isBlank(template)) {\n      return null;\n    }\n\n    var directives = this._flattenDirectives(template);\n\n    for (var i = 0; i < directives.length; i++) {\n      if (!Compiler._isValidDirective(directives[i])) {\n        throw new BaseException(\n            `Unexpected directive value '${stringify(directives[i])}' on the View of component '${stringify(component)}'`);\n      }\n    }\n\n    var boundDirectives = ListWrapper.map(directives,  (directive) => this._bindDirective(directive));\n\n    var renderTemplate = this._buildRenderTemplate(component, template, boundDirectives);\n    pvPromise = this._render.compile(renderTemplate).then( (renderPv) => {\n      return this._compileNestedProtoViews(componentBinding, renderPv, boundDirectives);\n    });\n\n    MapWrapper.set(this._compiling, component, pvPromise);\n    return pvPromise;\n  }\n\n  // TODO(tbosch): union type return AppProtoView or Promise<AppProtoView>\n  _compileNestedProtoViews(componentBinding, renderPv, directives) {\n    var protoViews = this._protoViewFactory.createAppProtoViews(componentBinding, renderPv, directives);\n    var protoView = protoViews[0];\n    // TODO(tbosch): we should be caching host protoViews as well!\n    // -> need a separate cache for this...\n    if (renderPv.type === renderApi.ProtoViewDto.COMPONENT_VIEW_TYPE && isPresent(componentBinding)) {\n      // Populate the cache before compiling the nested components,\n      // so that components can reference themselves in their template.\n      var component = componentBinding.key.token;\n      this._compilerCache.set(component, protoView);\n      MapWrapper.delete(this._compiling, component);\n    }\n\n    var nestedPVPromises = [];\n    ListWrapper.forEach(this._collectComponentElementBinders(protoViews), (elementBinder) => {\n      var nestedComponent = elementBinder.componentDirective;\n      var elementBinderDone = (nestedPv) => {\n        elementBinder.nestedProtoView = nestedPv;\n      };\n      var nestedCall = this._compile(nestedComponent);\n      if (PromiseWrapper.isPromise(nestedCall)) {\n        ListWrapper.push(nestedPVPromises, nestedCall.then(elementBinderDone));\n      } else if (isPresent(nestedCall)) {\n        elementBinderDone(nestedCall);\n      }\n    });\n\n    var protoViewDone = (_) => {\n      return protoView;\n    };\n    if (nestedPVPromises.length > 0) {\n      return PromiseWrapper.all(nestedPVPromises).then(protoViewDone);\n    } else {\n      return protoViewDone(null);\n    }\n  }\n\n  _collectComponentElementBinders(protoViews:List<AppProtoView>):List<ElementBinder> {\n    var componentElementBinders = [];\n    ListWrapper.forEach(protoViews, (protoView) => {\n      ListWrapper.forEach(protoView.elementBinders, (elementBinder) => {\n        if (isPresent(elementBinder.componentDirective)) {\n          ListWrapper.push(componentElementBinders, elementBinder);\n        }\n      });\n    });\n    return componentElementBinders;\n  }\n\n  _buildRenderTemplate(component, view, directives): renderApi.ViewDefinition {\n    var componentUrl = this._urlResolver.resolve(\n        this._appUrl, this._componentUrlMapper.getUrl(component)\n    );\n    var templateAbsUrl = null;\n    if (isPresent(view.templateUrl)) {\n      templateAbsUrl = this._urlResolver.resolve(componentUrl, view.templateUrl);\n    } else if (isPresent(view.template)) {\n      // Note: If we have an inline template, we also need to send\n      // the url for the component to the render so that it\n      // is able to resolve urls in stylesheets.\n      templateAbsUrl = componentUrl;\n    }\n    return new renderApi.ViewDefinition({\n      componentId: stringify(component),\n      absUrl: templateAbsUrl,\n      template: view.template,\n      directives: ListWrapper.map(directives, directiveBinding => directiveBinding.metadata )\n    });\n  }\n\n  _flattenDirectives(template: View):List<Type> {\n    if (isBlank(template.directives)) return [];\n\n    var directives = [];\n    this._flattenList(template.directives, directives);\n\n    return directives;\n  }\n\n  _flattenList(tree:List<any>, out:List<any> /*<Type|Binding>*/):void {\n    for (var i = 0; i < tree.length; i++) {\n      var item = resolveForwardRef(tree[i]);\n      if (ListWrapper.isList(item)) {\n        this._flattenList(item, out);\n      } else {\n        ListWrapper.push(out, item);\n      }\n    }\n  }\n\n  static _isValidDirective(value: any): boolean {\n    return isPresent(value) && (value instanceof Type || value instanceof Binding);\n  }\n\n  static _assertTypeIsComponent(directiveBinding:DirectiveBinding):void {\n    if (directiveBinding.metadata.type !== renderApi.DirectiveMetadata.COMPONENT_TYPE) {\n      throw new BaseException(`Could not load '${stringify(directiveBinding.key.token)}' because it is not a component.`);\n    }\n  }\n}\n"]}