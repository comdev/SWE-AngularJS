{"version":3,"sources":["directive_resolver.js"],"names":[],"mappings":"AAAA;AAAA,KAAK,iBAAiB,AAAC,CAAC,MAAK,QAAQ;mBAArC,EAAC,GAAE,YAAqB;AAAE,8BAAwB;IAAE,AAA9B,CAAC;AAAvB,WAAS,CAAT,EAAC,KAAI,CAAO,KAAG,AAAS,CAAC;CAAgC,CAAC;;;;;;EAAlD,WAAS,EAAjB,EAAC,mDAAoB,CAAA,OAAM,AAAC,oCAAkB,CACtC,CAAA,oDAAqB,6DAA2B,CAAA,oDAAqB,GAAK,EAAC,OAAM,mDAAmB,CAAC,AAD/D,CACgE;EAAtG,kBAAgB,EADxB,EAAC,qBAAoB,CAAA,OAAM,AAAC,eAAkB,CACtC,CAAA,sBAAqB,+BAA2B,CAAA,sBAAqB,GAAK,EAAC,OAAM,qBAAmB,CAAC,AAD/D,CACgE;SAD9G,EAAC,wCAAoB,CAAA,OAAM,AAAC,4BAAkB,CACtC,CAAA,yCAAqB,kDAA2B,CAAA,yCAAqB,GAAK,EAAC,OAAM,wCAAmB,CAAC,AAD/D,CACgE;AACtG,OAAG;AAAG,YAAQ;AAAG,gBAAY;AAAG,YAAQ;EACxC,UAAQ,EAHhB,EAAC,qDAAoB,CAAA,OAAM,AAAC,mCAAkB,CACtC,CAAA,sDAAqB,+DAA2B,CAAA,sDAAqB,GAAK,EAAC,OAAM,qDAAmB,CAAC,AAD/D,CACgE;EAGtG,UAAQ,EAJhB,EAAC,kDAAoB,CAAA,OAAM,AAAC,sCAAkB,CACtC,CAAA,mDAAqB,4DAA2B,CAAA,mDAAqB,GAAK,EAAC,OAAM,kDAAmB,CAAC,AAD/D,CACgE;AAD9G,AAAI,EAAA,oBAOG,SAAM,kBAAgB;;AAe7B,AAtBwC,CAAA;AAAxC,AAAC,eAAc,YAAY,CAAC,AAAC,qBAQ3B,OAAM,CAAN,UAAQ,IAAG,AAAK,CAAa;AAC3B,AAAI,MAAA,CAAA,WAAU,EAAI,CAAA,SAAQ,YAAY,AAAC,CAAC,iBAAgB,AAAC,CAAC,IAAG,CAAC,CAAC,CAAC;AAChE,OAAI,SAAQ,AAAC,CAAC,WAAU,CAAC,CAAG;AAC1B,UAAS,GAAA,CAAA,CAAA,EAAE,EAAA,CAAG,CAAA,CAAA,EAAE,CAAA,WAAU,OAAO,CAAG,CAAA,CAAA,EAAE,CAAG;AACvC,AAAI,UAAA,CAAA,UAAS,EAAI,CAAA,WAAU,CAAE,CAAA,CAAC,CAAC;AAE/B,WAAI,UAAS,WAAa,UAAQ,CAAG;AACnC,eAAO,WAAS,CAAC;QACnB;AAAA,MACF;AAAA,IACF;AAAA,AACA,QAAM,IAAI,cAAY,AAAC,EAAC,mCAAmC,EAAC,CAAA,SAAQ,AAAC,CAAC,IAAG,CAAC,EAAG,CAAC;EAChF,MApBmF;AAArF,KAAK,eAAe,AAAC,kCACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,cAKzB,WAAS,AAAC,EAAC,EALqC;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,mDACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAOX,IAAG,GAP+B;EAAC,CAAC,CAAC,CAAC;AAsBrD","file":"angular2/src/core/compiler/directive_resolver.js","sourcesContent":["import {Injectable} from 'angular2/src/di/annotations_impl';\nimport {resolveForwardRef} from 'angular2/di';\nimport {Type, isPresent, BaseException, stringify} from 'angular2/src/facade/lang';\nimport {Directive} from '../annotations_impl/annotations';\nimport {reflector} from 'angular2/src/reflection/reflection';\n\n@Injectable()\nexport class DirectiveResolver {\n  resolve(type:Type):Directive {\n    var annotations = reflector.annotations(resolveForwardRef(type));\n    if (isPresent(annotations)) {\n      for (var i=0; i<annotations.length; i++) {\n        var annotation = annotations[i];\n\n        if (annotation instanceof Directive) {\n          return annotation;\n        }\n      }\n    }\n    throw new BaseException(`No Directive annotation found on ${stringify(type)}`);\n  }\n\n}\n"]}